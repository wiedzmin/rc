fpath=(~/.zsh/function $fpath)

mkd(){ mkdir "$1" && cd "$1"; }
rmd(){ local P="`pwd`"; cd .. && rmdir "$P" || cd "$P"; }

dot() {
	if [[ $LBUFFER = *.. ]]; then
		LBUFFER+=/..
	else
		LBUFFER+=.
	fi
}

# edit file with root privs
function eed() {
         emacsclient -c -a emacs "/sudo:root@localhost:$1"
}

# see https://github.com/junegunn/fzf/wiki/examples
# fbr - checkout git branch (including remote branches)
fbr() {
  local branches branch
  branches=$(git branch --all | grep -v HEAD) &&
  branch=$(echo "$branches" |
           fzf-tmux -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  if [ "x$branch" != "x" ]
  then
    git checkout $(echo "$branch" | sed "s/.* //" | sed "s#remotes/[^/]*/##")
  fi
}

# fco - checkout git branch/tag
fco() {
  local tags branches target
  tags=$(
    git tag | awk '{print "\x1b[31;1mtag\x1b[m\t" $1}') || return
  branches=$(
    git branch --all | grep -v HEAD             |
    sed "s/.* //"    | sed "s#remotes/[^/]*/##" |
    sort -u          | awk '{print "\x1b[34;1mbranch\x1b[m\t" $1}') || return
  target=$(
    (echo "$tags"; echo "$branches") |
    fzf-tmux -- --no-hscroll --ansi +m -d "\t" -n 2) || return
  if [ "x$target" != "x" ]
  then
    git checkout $(echo "$target" | awk '{print $2}')
  fi
}

# fcoc - checkout git commit
fcoc() {
  local commits commit
  commits=$(git log --pretty=oneline --abbrev-commit --reverse)
  commit=$(echo "$commits" | fzf --tac +s +m -e)
  if [ "x$commit" != "x" ]
  then
    git checkout $(echo "$commit" | sed "s/ .*//")
  fi
}

# fshow - git commit browser
fshow() {
  local out sha q
  while out=$(
      git log --decorate=short --graph --oneline --color=always |
      fzf --ansi --multi --no-sort --reverse --query="$q" --print-query); do
    q=$(head -1 <<< "$out")
    while read sha; do
      [ -n "$sha" ] && git show --color=always $sha | less -R
    done < <(sed '1d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
  done
}

# fkill - kill process
fkill() {
  pid=$(ps -ef | sed 1d | peco --initial-filter SmartCase | awk '{print $2}')

  if [ "x$pid" != "x" ]
  then
    kill -${1:-9} $pid
  fi
}

# fj - changing directory with fasd
fj() {
  local dir
  dir=$(fasd -Rdl | peco --initial-filter SmartCase) && cd "$dir"
}

#--------------------------------------------------------------------------
# A Cleaner Print of your current IP
#--------------------------------------------------------------------------
function ip() {
    ifconfig eth0 | grep 'inet ' | sed -e 's/:/ /' | awk '{print "eth0 (IPv4): " $2 " " $3 " " $4 " " $5 " " $6}'
    ifconfig wlan0 | grep 'inet ' | sed -e 's/ / /'| awk '{print "wlan0 (IPv4): " $2 " " $3 " " $4 " " $5 " " $6}'
}

safeload () {
    [ -f $1 ] && source $1
}
