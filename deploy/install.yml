- hosts: localhost

  tasks:

    - name: get work dir
      shell: pwd
      register: workdir

    - name: ensure some directories exist
      file:
        path={{ ansible_env.HOME }}/{{ item }}
        state=directory
      with_items:
        - '.imapfilter'
        - '.arbtt'
        - '.tmux/plugins'

    - name: ensure some packages installed (Gentoo)
      portage: package={{ item }} state=present
      with_items:
        - 'gnome-extra/nm-applet'
        - 'media-sound/volumeicon'
        - 'net-misc/dropbox'
        - 'sys-apps/dbus'
        - 'sys-fs/udisks-glue'
        - 'x11-apps/copyq'
        - 'x11-apps/xmodmap'
        - 'x11-apps/xrdb'
        - 'x11-misc/autocutsel'
        - 'x11-misc/kbdd'
        - 'x11-misc/redshift'
        - 'x11-misc/trayer-srg'
        - 'x11-misc/unclutter'
        - 'x11-misc/xxkb'
        - 'x11-terms/rxvt-unicode'
      sudo: yes
      when: ansible_distribution == "Gentoo"

    - name: make homedir symlinks
      file:
        src={{ workdir.stdout }}/../{{ item.src }}
        dest={{ ansible_env.HOME }}/{{ item.dest }}
        state=link
      with_items:
        - { src: '.Xresources', dest: '.Xresources' }
        - { src: 'hgrc-linux', dest: '.hgrc' } # TODO check OS
        - { src: '.tmux.conf', dest: '.tmux.conf' }
        - { src: '.xsession', dest: '.xsession' }
        - { src: 'zsh/.zsh', dest: '.zsh' }
        - { src: 'zsh/.zshrc', dest: '.zshrc' }
        - { src: 'set_path_global', dest: 'set_path_global' }
        - { src: '.xxkbrc', dest: '.xxkbrc' }
        - { src: '.vimperatorrc', dest: '.vimperatorrc' }
        - { src: 'emacsclient.desktop', dest: '.local/share/applications/emacsclient.desktop' }
        - { src: '.i3status.conf', dest: '.i3status.conf' }
        - { src: '.mbsyncrc', dest: '.mbsyncrc' }
        - { src: '.mailcap', dest: '.mailcap' }
        - { src: 'imapfilter-config.lua', dest: '.imapfilter/config.lua' }
        - { src: 'categorize.cfg', dest: '.arbtt/categorize.cfg' }
        - { src: 'gpg-agent.conf', dest: '.gnupg/gpg-agent.conf' }

    - name: register org-protocol handler in mimeapps
      lineinfile:
        dest={{ ansible_env.HOME }}/.local/share/applications/mimeapps.list
        line=x-scheme-handler/org-protocol=emacsclient.desktop
        state=present

    - name: make system symlinks
      file:
        src={{ workdir.stdout }}/../{{ item.src }}
        dest={{ item.dest }}
        state=link
      sudo: yes
      with_items:
        - { src: 'acpi', dest: '/etc/acpi' }
        - { src: 'xorg.conf.d', dest: '/etc/X11/xorg.conf.d' }

    - name: prepare global gitconfig
      template: src=../gitconfig.template dest=/etc/gitconfig
      sudo: yes

    - name: install tmux plugin manager
      git:
        repo=https://github.com/tmux-plugins/tpm
        dest={{ ansible_env.HOME }}/.tmux/plugins/tpm

    - name: ensure tmux plugin manager initialization
      lineinfile:
        dest={{ ansible_env.HOME }}/.tmux.conf
        regexp=''
        insertafter=EOF
        line="set -g @plugin 'tmux-plugins/tpm'\nrun '~/.tmux/plugins/tpm/tpm'"

    - name: accompanying tools | shepherd build (mail checking tool)
      shell: sbcl --eval "(pushnew (truename \"{{ workdir.stdout }}/../src/\") ql:*local-project-directories*)" --eval "(ql:register-local-projects)" --eval "(ql:quickload 'shepherd)" --eval "(shepherd::save-image-shepherd)"

    - name: accompanying tools | shepherd install (mail checking tool)
      shell: "mv {{ workdir.stdout }}/shepherd {{ workdir.stdout }}/../utils/shepherd"

    - name: accompanying tools | shepherd generate openrc entry
      template: src=templates/shepherd.openrc dest=./shepherd.openrc.entry

    - name: accompanying tools | shepherd install openrc entry
      copy: src=shepherd.openrc.entry dest=/etc/init.d/shepherd mode=0755
      sudo: yes

    - name: accompanying tools | shepherd restart service
      service: name=shepherd state=restarted
      sudo: yes

    - name: accompanying tools | shepherd openrc cleanup
      file: path=shepherd.openrc.entry state=absent
