---

- include_vars: portage.yml
  tags: [portage, bootstrap, overlays]

- name: portage | ensure paths
  tags: [portage, bootstrap]
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    recurse: "{{ item.recurse if 'recurse' in item else 'yes' }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ portage_paths }}"
  when: portage_paths is defined

- name: portage | instantiate templates
  tags: [portage, bootstrap]
  copy:
    content: "{{ lookup('template', '{{ item.src }}') }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ portage_templates }}"
  when: portage_templates is defined

- name: portage | ensure Layman installed
  tags: [portage]
  portage:
    package: app-portage/layman
    state: present
  become: yes
  when:
    - portage_check_packages_installed

- name: portage | instantiate Layman config
  tags: [portage, overlays]
  copy:
    content: "{{ lookup('template', 'layman/layman.cfg.template') }}"
    dest: "/etc/layman/layman.cfg"
    mode: 0755
  become: yes

- name: portage | get installed overlays
  tags: [portage, overlays]
  find:
    paths: "{{ portage_overlays_data_location }}"
    file_type: directory
  register: overlays_installed

- name: portage | ensure needed overlays
  tags: [portage, overlays]
  layman:
    name: "{{ item }}"
    state: present
  become: yes
  with_items: "{{ portage_overlays }}"
  register: overlays_needed

- name: portage | remove obsolete overlays
  tags: [portage, overlays]
  layman:
    name: "{{ item.path | basename }}"
    state: absent
  become: yes
  with_items: "{{ overlays_installed.files }}"
  when: "item.path | basename not in portage_overlays"
  register: overlays_removed

- name: portage | fix overlays permissions
  tags: [portage, overlays]
  file:
    path: "{{ portage_overlays_data_location }}/{{ item }}"
    owner: portage
    group: portage
    mode: 0755
    recurse: yes
  become: yes
  with_items: "{{ portage_overlays }}"
  when:
    - overlays_needed.changed

- name: portage | update tree status
  tags: [portage, overlays]
  shell: eix-update
  become: yes
  when: overlays_needed.changed or overlays_removed.changed

- name: portage | copy local overlay files
  tags: [portage, overlays]
  copy:
    src: "{{ role_path }}/files/portage/local_overlay/"
    dest: "{{ portage_local_overlay_data_location }}"
    owner: portage
    group: portage
    mode: 0755
  become: yes

# TODO think of moving this to shell level
# consult with "world" file
# reduce time for checks
- name: portage | ensure some packages installed
  tags: [portage]
  portage:
    package: "{{ item }}"
    state: present
  with_items: "{{ packages_of_interest }}"
  become: yes
  when:
    - portage_check_packages_installed

- name: portage | mount build directory as tmpfs
  tags: [portage]
  lineinfile:
    dest: /etc/fstab
    line: 'tmpfs                   {{ portage_build_dir.path }}       tmpfs   uid={{ portage_build_dir.uid }},gid={{ portage_build_dir.gid }},size={{ portage_build_dir.size }},mode={{ portage_build_dir.mode }}      0 1'
    state: present
  become: yes
