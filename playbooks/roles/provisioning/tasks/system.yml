---

- include_vars: system.yml
  tags: [system, kernel]

- name: system | ensure paths
  tags: [system]
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    recurse: "{{ item.recurse if 'recurse' in item else 'yes' }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ system_paths }}"
  when: system_paths is defined

- name: system | instantiate templates
  tags: [system]
  copy:
    content: "{{ lookup('template', '{{ item.src }}') }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ system_templates }}"
  when: system_templates is defined

- name: ensure particular Linux kernel flags
  tags: [system, kernel]
  lineinfile:
    path: "{{ system_kernel_config_file }}"
    regexp: "^CONFIG_{{ item.name }}=[ym1234567890]|^# CONFIG_{{ item.name }} is not set" # (alex3rd) regexp is too permissive, but does the trick
    line: "{% if item.value == 'n' %}# CONFIG_{{ item.name }} is not set{% else %}CONFIG_{{ item.name }}={{ item.value }}{% if system_kernel_dump_labels and item.labels | length > 0 %} # {{ item.labels | join(', ')}}{% endif %}{% endif %}"
    state: present
  with_items: "{{ system_kernel_flags | rejectattr('disabled', 'sameas', true) | list }}"
  become: yes
