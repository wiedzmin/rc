x11_paths:
  - { path: "{{ home_config_path }}/dunst", dists: ["Gentoo"] }
  - { path: "{{ home_config_path }}/i3", dists: ["Gentoo"] }
  - { path: "{{ nixos_dotfiles_location }}/x11/i3", become: yes, dists: ["NixOS"] }
  - { path: "{{ home_config_path }}/rofi", dists: ["Gentoo"] }
  - { path: "{{ nixos_dotfiles_location }}/x11/rofi", become: yes, dists: ["NixOS"] }
  - { path: "{{ home_config_path }}/twmn", dists: ["Gentoo"] }
  - { path: "{{ ansible_env.HOME }}/.local/share/applications", dists: ["Gentoo"] }
  - { path: "{{ ansible_env.HOME }}/.sawfish", dists: ["Gentoo"] }
x11_templates:
  - { src: "browser/.surfingkeysrc", dest: "{{ ansible_env.HOME }}/.surfingkeysrc", dists: ["Gentoo"] }
  - { src: "browser/wimpulation.json", dest: "{{ ansible_env.HOME }}/wimpulation.json", dists: ["Gentoo"] }
  - { src: "browser/wimpulation.json", dest: "{{ nixos_dotfiles_location }}/wimpulation.json", become: yes, dists: ["NixOS"] }
  - { src: "x11/dunstrc.j2", dest: "{{ home_config_path }}/dunst/dunstrc", dists: ["Gentoo"] }
  - { src: "x11/dunstrc.j2", dest: "{{ nixos_dotfiles_location }}/x11/dunstrc", become: yes, dists: ["NixOS"] }
  - { src: "x11/rofi.j2", dest: "{{ home_config_path }}/rofi/config", dists: ["Gentoo"] } # TODO: review content and port to NixOS later
  - { src: "x11/oxide.rasi", dest: "{{ home_config_path }}/rofi/oxide.rasi", dists: ["Gentoo"] }
  - { src: "x11/oxide.rasi", dest: "{{ nixos_dotfiles_location }}/x11/rofi/oxide.rasi", become: yes, dists: ["NixOS"] }
  - { src: "categorize.cfg", dest: "{{ ansible_env.HOME }}/.arbtt/categorize.cfg", dists: ["Gentoo"] }
  - { src: "categorize.cfg", dest: "{{ nixos_dotfiles_location }}/x11/categorize.cfg", become: yes, dists: ["NixOS"] } # TODO: make custom systemd service for arbtt
  - { src: ".gmrunrc", dest: "{{ ansible_env.HOME }}/.gmrunrc", dists: ["Gentoo"] }
  - { src: ".gmrunrc", dest: "{{ nixos_dotfiles_location }}/x11/.gmrunrc", become: yes, dists: ["NixOS"] }
  - { src: ".i3status.conf", dest: "{{ ansible_env.HOME }}/.i3status.conf", dists: ["Gentoo"] }
  - { src: ".i3status.conf", dest: "{{ nixos_dotfiles_location }}/x11/.i3status.conf", become: yes, dists: ["NixOS"] }
  - { src: ".sawfishrc", dest: "{{ ansible_env.HOME }}/.sawfish/rc", dists: ["Gentoo"] }
  - { src: ".stalonetrayrc", dest: "{{ ansible_env.HOME }}/.stalonetrayrc", dists: ["Gentoo"] }
  - { src: ".xxkbrc", dest: "{{ ansible_env.HOME }}/.xxkbrc", dists: ["Gentoo"] }
  - { src: ".xxkbrc", dest: "{{ nixos_dotfiles_location }}/x11/.xxkbrc", become: yes, dists: ["NixOS"] }
  - { src: "i3.conf", dest: "{{ home_config_path }}/i3/config", dists: ["Gentoo"] }
  - { src: "i3.conf", dest: "{{ nixos_dotfiles_location }}/x11/i3/config", become: yes, dists: ["NixOS"] }
  - { src: "twmn.conf", dest: "{{ home_config_path }}/twmn/twmn.conf", dists: ["Gentoo"] }
  - { src: "xmobarrc", dest: "{{ ansible_env.HOME }}/.xmonad/xmobarrc" }
  - { src: "xmobarrc-noinet", dest: "{{ ansible_env.HOME }}/.xmonad/xmobarrc-noinet" }
  - { src: "xmobarrc.xmonad.old", dest: "{{ ansible_env.HOME }}/.xmonad/xmobarrc.xmonad.old", dists: ["Gentoo"] }
  - { src: "emacsclient.desktop", dest: "{{ ansible_env.HOME }}/.local/share/applications/emacsclient.desktop" }
  # TODO: merge into single Xresources file
  - { src: "resources/.Xresources.j2", dest: "{{ ansible_env.HOME }}/.Xresources", xresources: yes, dists: ["Gentoo"] }
  - { src: "resources/.urxvtrc.j2", dest: "{{ ansible_env.HOME }}/.urxvtrc", enabled: yes, xresources: yes, dists: ["Gentoo"] }
  - { src: "resources/.xftrc.j2", dest: "{{ ansible_env.HOME }}/.xftrc", enabled: yes, xresources: yes, dists: ["Gentoo"] }
  - { src: "resources/.emacsrc.j2", dest: "{{ ansible_env.HOME }}/.emacsrc", enabled: yes, xresources: yes, dists: ["Gentoo"] }
  - { src: "x11/statusbar_osd.j2", dest: "{{ binaries_prefix['Gentoo'].path }}/statusbar_osd", user: "{{ user_name }}", dists: ["Gentoo"] }
  # TODO: review and maybe merge into one script with parameters / review existing XRandR solutions (autorandr, etc.)
  - { src: "x11/xrandr/ext_heads_dock.sh", dest: "{{ binaries_prefix['Gentoo'].path }}/ext_heads_dock.sh", user: "{{ user_name }}", become: yes, dists: ["Gentoo"] }
  - { src: "x11/xrandr/ext_heads_undock.sh", dest: "{{ binaries_prefix['Gentoo'].path }}/ext_heads_undock.sh", user: "{{ user_name }}", become: yes, dists: ["Gentoo"] }
  - { src: "x11/xrandr/ext_head_above.sh", dest: "{{ binaries_prefix['Gentoo'].path }}/ext_head_above.sh", user: "{{ user_name }}", become: yes, dists: ["Gentoo"] }
  - { src: "x11/xrandr/ext_head_left.sh", dest: "{{ binaries_prefix['Gentoo'].path }}/ext_head_left.sh", user: "{{ user_name }}", become: yes, dists: ["Gentoo"] }
  - { src: "x11/xrandr/ext_head_off.sh", dest: "{{ binaries_prefix['Gentoo'].path }}/ext_head_off.sh", user: "{{ user_name }}", become: yes, dists: ["Gentoo"] }
  - { src: "x11/xrandr/ext_head_right.sh", dest: "{{ binaries_prefix['Gentoo'].path }}/ext_head_right.sh", user: "{{ user_name }}", become: yes, dists: ["Gentoo"] }
  - { src: "x11/xrandr/rescale_wallpaper.sh", dest: "{{ binaries_prefix['Gentoo'].path }}/rescale_wallpaper.sh", user: "{{ user_name }}", become: yes, dists: ["Gentoo"] }
mime_assocs: # TODO: check if this is applicable to NixOS
  - { program: "abiword", mimetype: "application/msword" }
  - { program: "{{ default_image_viewer_executable }}", mimetype: "image/jpeg" }
  - { program: "{{ default_image_viewer_executable }}", mimetype: "image/png" }
  - { program: "{{ default_browser_executable }}", mimetype: "text/html" }
  - { program: "{{ default_browser_executable }}", mimetype: "x-scheme-handler/http" }
  - { program: "{{ default_browser_executable }}", mimetype: "x-scheme-handler/https" }
  - { program: "{{ default_video_player_executable }}", mimetype: "video/avi" }
  - { program: "{{ default_video_player_executable }}", mimetype: "video/mp4" }
  - { program: "{{ default_video_player_executable }}", mimetype: "video/mpeg" }
  - { program: "{{ default_video_player_executable }}", mimetype: "video/x-flv" }
  - { program: "{{ default_video_player_executable }}", mimetype: "video/x-matroska" }
  - { program: "{{ default_video_player_executable }}", mimetype: "video/x-ms-wmv" }
  - { program: "{{ default_ebook_viewer_executable }}", mimetype: "application/pdf" }
  - { program: "{{ default_ebook_viewer_executable }}", mimetype: "application/x-pdf" }
  - { program: "{{ default_ebook_viewer_executable }}", mimetype: "image/vnd.djvu" }
  - { program: "{{ default_ebook_viewer_executable }}", mimetype: "image/x-djvu" }
xft_fonts:
  - { name: "Consolas", is_bold: yes, bold_keyword: "style"}
  - { name: "PTMono", is_bold: yes, bold_keyword: "style"}
  - { name: "Hack", is_bold: yes, bold_keyword: "weight"}
  - { name: "IosevkaCC", is_bold: yes, bold_keyword: "weight"}
  - { name: "mononoki", is_bold: yes, bold_keyword: "weight"}
  - { name: "Fantasque Sans Mono", is_bold: yes, bold_keyword: "style"}
  - { name: "Go Mono", is_bold: yes, bold_keyword: "style"}
  - { name: "Input Mono", is_bold: yes, bold_keyword: "weight"}
  - { name: "Noto Mono", is_bold: yes, bold_keyword: "style"}
  - { name: "Fira Code", is_bold: yes, bold_keyword: "weight"}
xft_font_current: "{{ xft_fonts.7 }}"
xft_font_fallback: "{{ xft_fonts.0 }}"
xft_font_size_app: 11
xft_font_size_term: 9
vpn_service_name: job-vpn
osd_delay: 2
osd_font: "-*-fixed-*-*-*-*-24-*-*-*-*-*-*-*"
osd_color: green
osd_x_offset_1: 1000
osd_y_offset_1: 600
osd_x_offset_2: 1400
osd_y_offset_2: 1000
cpu_usage_interval: 0.1
xrandr_vga_output: VGA-1
xrandr_internal_output: LVDS-1
xrandr_vga_rotation: left
xrandr_dock_left_output: HDMI-2
xrandr_dock_left_rotation: normal
xrandr_dock_right_output: HDMI-3
xrandr_dock_right_rotation: left
xrandr_blue: 0.5
xrandr_brightness: 0.7
x11_stumpwm_traits: { clone_from: "https://github.com/wiedzmin/stumpwm", local_path: "{{ ansible_env.HOME }}/.commonlisp/stumpwm-git" }
x11_stumpwm_set_font: yes
x11_stumpwm_on_xrandr_commands:
  - update-heads-layout
  - emacs
xsession_wallpaper_location: "{{ ansible_env.HOME }}/blobs/wallpaper"
xsession_wallpaper_file: "{{ xsession_wallpaper_location }}/alena-aenami-7p-m-1k.jpg"
xsession_loop_wm: no
xsession_errorlogs_to_keep: 3
xsession_services:
  - { command: "arbtt-capture", heavyweight: no }
  - { command: "autocutsel -buttonup", heavyweight: no }
  - { command: "dbus-daemon --session", heavyweight: no }
  - { command: "dropbox", heavyweight: yes }
  - { command: "kbdd", disabled: "{{ xsession_current_wm in ['stumpwm', 'xmonad'] }}", heavyweight: no }
  - { command: "nm-applet", heavyweight: no }
  - { command: "pulseaudio --start", heavyweight: no }
  - { command: "rdm", heavyweight: no }
  - { command: "redshift -l 55.751244:37.618423 -t 5500:3700 -m randr", heavyweight: no }
  - { command: "trayer-srg --edge top --align right --monitor primary --SetDockType true --SetPartialStrut true --expand true --widthtype request --height 15 --transparent true --tint 0x000000",
  disabled: "{{ xsession_current_wm in ['awesome', 'stumpwm'] }}",
  heavyweight: no }
  - { command: "unclutter -idle 5", heavyweight: no }
  - { command: "volumeicon", disabled: yes, heavyweight: no }
  - { command: "xxkb", disabled: "{{ xsession_current_wm in ['awesome', 'stumpwm'] }}", heavyweight: no }
  - { command: "syndaemon -i 0.3 -K -R", heavyweight: no }
xsession_disable_capslock: yes
xsession_timezone: Europe/Moscow
xsession_media_mount: yes
xdg_user_dirs:
  - { name: "download", value: "{{ ansible_env.HOME}}/Downloads" }
  - { name: "pictures", value: "{{ ansible_env.HOME}}/blobs/photo" }
  - { name: "videos", value: "{{ ansible_env.HOME}}/blobs/video" }
