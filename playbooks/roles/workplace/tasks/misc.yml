---

- import_tasks: common.yml
  tags: [misc]

- name: misc | ensure paths
  tags: [misc]
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.group if 'group' in item else current_user_primary_group }}"
    recurse: "{{ item.recurse if 'recurse' in item else 'yes' }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ misc_paths }}"
  when: misc_paths is defined and (('dists' in item and ansible_distribution in item.dists) or 'dists' not in item)

- name: misc | instantiate templates
  tags: [misc]
  copy:
    content: "{{ lookup('template', '{{ item.src }}') }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.group if 'group' in item else current_user_primary_group }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ misc_templates }}"
  when: misc_templates is defined and (('dists' in item and ansible_distribution in item.dists) or 'dists' not in item)

- name: misc | copy custom scripts
  tags: [misc, scripts]
  copy:
    content: "{{ lookup('template', 'scripts/{{ item | basename }}') }}"
    dest: "{{ binaries_prefix[ansible_distribution].path }}/{{ item | basename }}"
    mode: 0755
  with_fileglob:
    - "{{ role_path }}/templates/scripts/*"
  become: "{{ binaries_prefix[ansible_distribution].become | default(False) }}"

- name: misc | backup Emacs bookmarks
  tags: [misc, emacs]
  copy:
    src: "{{ emacs_config_dir }}/data/bookmark-default.el"
    dest: "{{ playbook_dir }}/../private/bookmarks/bookmark-default.el"
    mode: 0755

- name: misc | restore Emacs bookmarks
  tags: [misc, emacs]
  copy:
    src: "{{ playbook_dir }}/../private/bookmarks/bookmark-default.el"
    dest: "{{ emacs_config_dir }}/data/bookmark-default.el"
    mode: 0755

# TODO: (alex3rd) change TG backup implementation, see TODO items
