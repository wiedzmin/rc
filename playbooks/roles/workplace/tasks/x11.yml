- include_vars: "{{ item }}"
  tags: [x11, scripts]
  with_items:
    - x11.yml
    - misc.yml

- import_tasks: common.yml
  tags: [x11]

- name: x11 | ensure paths
  tags: [x11]
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    recurse: "{{ item.recurse if 'recurse' in item else 'yes' }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ x11_paths }}"
  when: x11_paths is defined

- name: x11 | instantiate templates
  tags: [x11]
  copy:
    content: "{{ lookup('template', '{{ item.src }}') }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode if 'mode' in item else 0755 }}"
    owner: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
    group: "{{ item.user if 'user' in item else lookup('env', 'USER') }}"
  become: "{{ item.become if 'become' in item else 'no' }}"
  with_items: "{{ x11_templates }}"
  when: x11_templates is defined

- name: x11 | register org-protocol handler in mimeapps
  tags: [x11]
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.local/share/applications/mimeapps.list"
    line: x-scheme-handler/org-protocol=emacsclient.desktop
    state: present

- name: x11 | setup xdg-open associations
  tags: [x11]
  shell: "xdg-mime default {{ item.program }}.desktop {{ item.mimetype }}"
  with_items: "{{ mime_assocs }}"

- name: x11 | update MIME types DB
  tags: [x11]
  shell: "update-desktop-database ~/.local/share/applications/"

- name: x11 | generate OSD statusbar script
  tags: [x11]
  copy:
    content: "{{ lookup('template', 'x11/statusbar_osd.template') }}"
    dest: "{{ binaries_prefix }}/statusbar_osd"
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_group }}"

- name: x11 | generate .xsession script
  tags: [x11]
  copy:
    content: "{{ lookup('template', 'x11/.xsession.template') }}"
    dest: "{{ ansible_env.HOME }}/.xsession"
    mode: 0755
  register: xsession_script

- name: x11 | copy xrandr scripts
  tags: [x11, scripts]
  copy:
    content: "{{ lookup('template', 'x11/xrandr/{{ item | basename }}') }}"
    dest: "/usr/local/bin/{{ item | basename }}"
    mode: 0755
  with_fileglob:
    - "{{ role_path }}/templates/x11/xrandr/*"
  become: yes

- name: x11 | remove tangled Emacs config
  tags: [x11]
  file:
    path: "{{ emacs_config_name_tangled }}"
    state: absent
  when:
    - xsession_script.changed
