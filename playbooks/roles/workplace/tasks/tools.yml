- include_vars: "{{ item }}"
  tags: [tools]
  with_items:
    - tools.yml
    - misc.yml
    - paths.yml
    - shells.yml

- name: accompanying tools | shepherd build (mail checking tool)
  tags: [tools, shepherd]
  git:
    repo: "{{ shepherd_traits.clone_from }}"
    dest: "{{ shepherd_traits.local_path }}"
    force: yes

- name: accompanying tools | shepherd build (mail checking tool)
  tags: [tools, shepherd]
  make:
    chdir: "{{ shepherd_traits.local_path }}"
    target: all

- name: accompanying tools | shepherd install (mail checking tool)
  tags: [tools, shepherd]
  shell: "mv {{ shepherd_traits.local_path }}/builds/shepherd /usr/local/bin/shepherd"
  become: yes

- name: install tmux plugin manager
  tags: [tools, tmux]
  git:
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ ansible_env.HOME }}/.tmux/plugins/tpm"

- name: imapfilter | remove old config file
  tags: [tools, imapfilter]
  file:
    path: "{{ imapfilter_config }}"
    state: absent

- name: imapfilter | seed base config
  tags: [tools, imapfilter]
  shell: "cat {{ mail_configs_dir }}/imapfilter-base.lua >> {{ imapfilter_config }} && echo -e -n '\n' >> {{ imapfilter_config }}"

- name: imapfilter | populate with account configs
  tags: [tools, imapfilter]
  shell: "cat {{ item }} >> {{ imapfilter_config }} && echo -e -n '\n' >> {{ imapfilter_config }}"
  with_fileglob:
    - "{{ imapfilter_d_path }}/*"

- name: imapfilter | copy generated config file
  tags: [tools, imapfilter]
  copy:
    src: "{{ imapfilter_config }}"
    dest: "{{ ansible_env.HOME }}/.imapfilter/config.lua"

- name: imapfilter | Remove generated config file
  tags: [tools, imapfilter]
  file:
    path: "{{ imapfilter_config }}"
    state: absent

- name: Buildapp | clone repo
  tags: [tools, buildapp]
  git:
    repo: "{{ buildapp_traits.clone_from }}"
    dest: "{{ buildapp_traits.local_path }}"
    force: yes

- name: Buildapp
  tags: [tools, buildapp]
  make:
    chdir: "{{ buildapp_traits.local_path }}"
    target: "{{ item }}"
  with_items:
    - buildapp
    - install
  become: yes

- name: git-quick-stats | clone repository
  tags: [tools, gqs]
  git:
    repo: "{{ gqs_traits.clone_from }}"
    dest: "{{ gqs_traits.local_path }}"
    force: yes

- name: git-quick-stats | install
  tags: [tools, gqs]
  make:
    chdir: "{{ gqs_traits.local_path }}"
    target: install
  become: yes

- name: git-quick-stats | set permissions
  tags: [tools, gqs]
  file:
    path: "{{ binaries_prefix }}/git-quick-stats"
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
  become: yes

- name: git-quick-stats | uninstall
  tags: [tools, gqs]
  make:
    chdir: "{{ gqs_traits.local_path }}"
    target: uninstall
  when:
    - False # invoke directly

- name: download Telegram Desktop archive
  tags: [tools, tg]
  get_url:
    url: "https://updates.tdesktop.com/tlinux/tsetup.{{ telegram_version }}.tar.xz"
    dest: /tmp/tsetup.tar.xz
    force: yes

- name: update Telegram Desktop binaries
  tags: [tools, tg]
  unarchive:
    src: /tmp/tsetup.tar.xz
    dest: /usr/local/bin
    extra_opts:
      - "--strip=1"
  become: yes

# TODO: think of TG themes automation

- name: tmuxifier | clone repo
  tags: [tools, tmuxifier]
  git:
    repo: "{{ tmuxifier_traits.clone_from }}"
    dest: "{{ tmuxifier_traits.local_path }}"
    force: yes

- name: tmuxifier | update configs
  tags: [tools, tmuxifier]
  blockinfile:
    dest: "{{ ansible_env.HOME }}/{{ item[0] }}"
    insertafter: "{{ item[1].after }}"
    block: |
      {{ item[1].block }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item[1].idx }}"
    state: present
  with_nested:
    - "{{ common_settings_basenames }}"
    - [{ idx: 1,  block: "    $HOME/.tmuxifier/bin", after: "^BIN_DIRS=\\(" },
    { idx: 2, block: "eval \"$(tmuxifier init -)\"", after: "EOF"}]
    # TODO: think of way to rerun some links/path population steps after this

- name: httplab | install
  tags: [tools, golang]
  shell: go get github.com/gchaincl/httplab

# TODO: https://github.com/asciimoo/wuzz - master/HEAD is broken (SIGSEGV), try later

- name: Zshnip | clone repo
  tags: [tools, zshnip]
  git:
    repo: "{{ zshnip_traits.clone_from }}"
    dest: "{{ zshnip_traits.local_path }}"
    force: yes

- name: Zshnip | copy file(s)
  tags: [tools, zshnip]
  copy:
    src: "{{ zshnip_traits.local_path }}/zshnip.zsh"
    dest: "/usr/local/bin"
    mode: 0755
  become: yes

- name: Zshnip | configure Zsh
  tags: [tools, zshnip]
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.zsh/custom"
    line: "source zshnip.zsh"
    state: present

- name: Zshnip | configure Zsh | bind keys
  tags: [tools, zshnip]
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zsh/bindkeys"
    line: "{{ item }}"
  with_items:
    - "\nbindkey '\ej' zshnip-expand-or-edit"
    - "bindkey '\ee' zshnip-edit-and-expand"

- name: Hexchat | download theme
  tags: [tools, hexchat]
  get_url:
    url: https://dl.hexchat.net/themes/Zenburn.hct
    dest: /tmp/Zenburn.hct
    force: yes

- name: Hexchat | apply theme
  tags: [tools, hexchat]
  unarchive:
    src: /tmp/Zenburn.hct
    dest: "{{ ansible_env.HOME }}/.config/hexchat"

# TODO: setup znc on octocat.ru

- name: hr | clone repository
  tags: [tools, hr]
  git:
    repo: "{{ hr_traits.clone_from }}"
    dest: "{{ hr_traits.local_path }}"
    force: yes

- name: hr | install
  tags: [tools, hr]
  make:
    chdir: "{{ hr_traits.local_path }}"
    target: install
  become: yes

- name: tbdiff | clone repository
  tags: [tools, tbdiff]
  git:
    repo: "{{ tbdiff_traits.clone_from }}"
    dest: "{{ tbdiff_traits.local_path }}"
    force: yes

- name: tbdiff | install
  tags: [tools, tbdiff]
  copy:
    src: "{{ tbdiff_traits.local_path }}/git-tbdiff.py"
    dest: "/usr/local/bin/git-tbdiff"
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
  become: yes

- name: exa | clone repository
  tags: [tools, exa]
  git:
    repo: "{{ exa_traits.clone_from }}"
    dest: "{{ exa_traits.local_path }}"
    force: yes

- name: exa | install
  tags: [tools, exa]
  make:
    chdir: "{{ exa_traits.local_path }}"
    target: install
  become: yes
