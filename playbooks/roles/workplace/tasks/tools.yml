- include_vars: "{{ item }}"
  tags: [tools]
  with_items:
    - tools.yml
    - misc.yml
    - paths.yml
    - shells.yml

- name: accompanying tools | shepherd (scheduling) | copy jobs definitions
  tags: [tools, shepherd]
  copy:
    src: "{{ playbook_dir }}/../private/shepherd-jobs"
    dest: "/home/octocat/shepherd-jobs.yml"
    mode: 0755

- name: imapfilter | remove old config file
  tags: [tools, imapfilter]
  file:
    path: "{{ imapfilter_config }}"
    state: absent

- name: imapfilter | seed base config
  tags: [tools, imapfilter]
  shell: "cat {{ mail_configs_dir }}/imapfilter-base.lua >> {{ imapfilter_config }} && echo -e -n '\n' >> {{ imapfilter_config }}"

- name: imapfilter | populate with account configs
  tags: [tools, imapfilter]
  shell: "cat {{ item }} >> {{ imapfilter_config }} && echo -e -n '\n' >> {{ imapfilter_config }}"
  with_fileglob:
    - "{{ imapfilter_d_path }}/*"

- name: imapfilter | copy generated config file
  tags: [tools, imapfilter]
  copy:
    src: "{{ imapfilter_config }}"
    dest: "{{ ansible_env.HOME }}/.imapfilter/config.lua"

- name: imapfilter | Remove generated config file
  tags: [tools, imapfilter]
  file:
    path: "{{ imapfilter_config }}"
    state: absent

- name: tmuxifier | update configs
  tags: [tools, tmuxifier]
  blockinfile:
    dest: "{{ ansible_env.HOME }}/{{ item[0] }}"
    insertafter: "{{ item[1].after }}"
    block: |
      {{ item[1].block }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item[1].idx }}"
    state: present
  with_nested:
    - "{{ common_settings_basenames }}"
    - [{ idx: 1,  block: "    $HOME/.tmuxifier/bin", after: "^BIN_DIRS=\\(" },
    { idx: 2, block: "eval \"$(tmuxifier init -)\"", after: "EOF"}]
    # TODO: think of way to rerun some links/path population steps after this

- name: Zshnip | configure Zsh
  tags: [tools, zshnip]
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.zsh/custom"
    line: "source zshnip.zsh"
    state: present

- name: Zshnip | configure Zsh | bind keys
  tags: [tools, zshnip]
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zsh/bindkeys"
    line: "{{ item }}"
  with_items:
    - "\nbindkey '\ej' zshnip-expand-or-edit"
    - "bindkey '\ee' zshnip-edit-and-expand"

- name: Hexchat | download theme
  tags: [tools, hexchat]
  get_url:
    url: https://dl.hexchat.net/themes/Zenburn.hct
    dest: /tmp/Zenburn.hct
    force: yes

- name: Hexchat | apply theme
  tags: [tools, hexchat]
  unarchive:
    src: /tmp/Zenburn.hct
    dest: "{{ ansible_env.HOME }}/.config/hexchat"

# TODO: setup znc on octocat.ru
