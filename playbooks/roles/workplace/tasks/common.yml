---

- name: collect CPU flags
  shell: "cat /proc/cpuinfo | grep flags | head -1 | cut -d':' -f 2"
  register: cpu_flags_list
  when: ansible_distribution == "Gentoo"

- name: populate CPU flags fact
  set_fact:
    cpu_flags: "{{ cpu_flags_list.stdout.split(' ')[1:] }}"
  when: ansible_distribution == "Gentoo"

- name: gpg | get private key ID
  tags: [common]
  shell: "gpg2 --list-secret-keys --keyid-format LONG {{ gnupg_key_id }} | grep sec | cut -d' ' -f 4 | cut -d'/' -f 2"
  register: gpg_private_key_id

- name: facts | gpg private key id
  tags: [common]
  set_fact:
    gpg_private_key_id: "{{ gpg_private_key_id.stdout }}"

- name: shells | collect binaries
  tags: [common]
  shell: "which {{ item }}"
  register: user_shell_binaries
  with_items:
    - "{{ user_shells }}"

- name: Populate shell binaries
  tags: [common]
  set_fact:
    user_shell_binaries: "{{ user_shell_binaries | default({}) | combine( {item.item: item.stdout} ) }}"
  with_items: "{{ user_shell_binaries.results }}"

- name: groups | current user primary group
  tags: [common]
  shell: "groups | cut -d' ' -f1"
  register: current_user_primary_group

- name: facts | current user primary group
  tags: [common]
  set_fact:
    current_user_primary_group: "{{ current_user_primary_group.stdout }}"
