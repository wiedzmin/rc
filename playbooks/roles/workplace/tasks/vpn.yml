- include_vars: "{{ item }}"
  tags: [vpn, services]
  with_items:
    - misc.yml
    - vpn.yml
    - paths.yml

- name: ensure VPN custom config directory exist
  tags: [vpn, paths]
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: "{{ user_name }}"
    group: "{{ user_group }}"
    recurse: yes
  become: yes
  with_items:
    - "{{ custom_vpn_datadir }}"

- name: cleanup VPN custom config directory
  tags: [vpn, cleanup]
  file:
    path: "{{ item }}"
    state: absent
  with_fileglob:
    - "{{ custom_vpn_datadir }}/*"

- name: vpn | copy files to system location
  tags: [vpn, files]
  copy:
    src: "{{ playbook_dir }}/../private/vpn/current/{{ item }}"
    dest: "{{ custom_vpn_datadir }}/{{ item }}"
  become: yes
  with_items:
    - "auth.conf"
    - "office.ovpn"

- name: vpn | customize OpenVPN config | automate authentication # TODO: check if "script-security 2" matters
  tags: [vpn]
  lineinfile:
    dest: "{{ custom_vpn_datadir }}/office.ovpn"
    regexp: "^auth-user-pass"
    line: "auth-user-pass {{ custom_vpn_datadir }}/auth.conf"
  become: yes

- name: vpn | customize OpenVPN config | fix up/down scripting
  tags: [vpn]
  lineinfile:
    dest: "{{ custom_vpn_datadir }}/office.ovpn"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: "^up /etc/openvpn/update-resolv-conf", line: "up /etc/openvpn/up.sh" }
    - { regexp: "^down /etc/openvpn/update-resolv-conf", line: "down /etc/openvpn/down.sh" }
  become: yes
  when: ansible_distribution == "Gentoo"

- name: install openrc entry
  tags: [vpn, services]
  copy:
    content: "{{ lookup('template', 'services/{{ vpn_service_name }}.openrc') }}"
    dest: "/etc/init.d/{{ vpn_service_name }}"
    mode: 0755
  become: yes

- name: openrc local cleanup
  tags: [vpn, services, cleanup]
  file:
    path: "{{ vpn_service_name }}.openrc.entry"
    state: absent

- name: vpn | restart service
  tags: [vpn, services]
  service:
    name: "{{ vpn_service_name }}"
    state: restarted
  become: yes
