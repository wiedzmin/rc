- include_vars: "{{ item }}"
  tags: [always]
  with_items:
    - shells.yml

- import_tasks: common.yml
  tags: [shells]

- name: ensure groups exist
  tags: [shells]
  group:
    name: "{{ item }}"
    state: present
  with_items: "{{ default_user_groups }}"
  become: yes

- name: ensure default user traits
  tags: [shells]
  user:
    name: "{{ default_user_name }}"
    shell: "{{ user_shell_binaries[default_user_shell] }}"
    groups: "{{ default_user_groups | join(',') }}"
  become: yes

- name: instantiate common settings
  tags: [shells]
  copy:
    content: "{{ lookup('template', 'shell/{{ item }}.template') }}"
    dest: "{{ ansible_env.HOME }}/{{ item }}"
    mode: 0755
  with_items:
    - "{{ common_settings_basenames }}"

- name: check if .bashrc exists
  tags: [shells, bash]
  stat: path={{ ansible_env.HOME }}/.bashrc
  register: bashrc

- name: source common settings
  tags: [shells, bash]
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    line: "source ~/common_settings_bash"
    state: present
  when:
    - bashrc.stat.exists == True

- name: Antibody | generate plugins list
  tags: [shells, zsh]
  copy:
    content: "{{ lookup('template', 'shell/zsh.plugins.template') }}"
    dest: "{{ zsh_plugins_list_location }}"
    mode: 0755

- name: Antibody | bundle plugins statically
  tags: [shells, zsh]
  shell: "{{ zsh_plugins_antibody_bundle_command }}"

- name: instantiate .zshrc
  tags: [shells, zsh]
  copy:
    content: "{{ lookup('template', 'shell/.zshrc.template') }}"
    dest: "{{ ansible_env.HOME }}/.zshrc"
    mode: 0755

- name: tmux | instantiate sessions script
  tags: [shell, tmux]
  copy:
    content: "{{ lookup('template', 'shell/tmux-sessions.template') }}"
    dest: "{{ ansible_env.HOME }}/tmux-sessions"
    mode: 0755

- name: backup bookmarks
  tags: [shells, backup]
  copy:
    src: "{{ ansible_env.HOME }}/.bookmarks"
    dest: "{{ playbook_dir }}/../private/bookmarks/.bookmarks"
    mode: 0755

- name: restore bookmarks
  tags: [shells, restore]
  copy:
    src: "{{ playbook_dir }}/../private/bookmarks/.bookmarks"
    dest: "{{ ansible_env.HOME }}/.bookmarks"
    mode: 0755

- name: Zshnip | configure Zsh
  tags: [shells, zshnip]
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.zsh/custom"
    line: "source zshnip.zsh"
    state: present

- name: Zshnip | configure Zsh | bind keys
  tags: [shells, zshnip]
  lineinfile:
    path: "{{ ansible_env.HOME }}/.zsh/bindkeys"
    line: "{{ item }}"
  with_items:
    - "\nbindkey '\ej' zshnip-expand-or-edit"
    - "bindkey '\ee' zshnip-edit-and-expand"
